--
-- PostgreSQL database dump
--

-- Dumped from database version 11.11 (Ubuntu 11.11-1.pgdg18.04+1)
-- Dumped by pg_dump version 12.6 (Ubuntu 12.6-0ubuntu0.20.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: btree_gin; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS btree_gin WITH SCHEMA public;


--
-- Name: EXTENSION btree_gin; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION btree_gin IS 'support for indexing common datatypes in GIN';


--
-- Name: btree_gist; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS btree_gist WITH SCHEMA public;


--
-- Name: EXTENSION btree_gist; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION btree_gist IS 'support for indexing common datatypes in GiST';


--
-- Name: citext; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public;


--
-- Name: EXTENSION citext; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION citext IS 'data type for case-insensitive character strings';


--
-- Name: cube; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS cube WITH SCHEMA public;


--
-- Name: EXTENSION cube; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION cube IS 'data type for multidimensional cubes';


--
-- Name: dblink; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS dblink WITH SCHEMA public;


--
-- Name: EXTENSION dblink; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION dblink IS 'connect to other PostgreSQL databases from within a database';


--
-- Name: dict_int; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS dict_int WITH SCHEMA public;


--
-- Name: EXTENSION dict_int; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION dict_int IS 'text search dictionary template for integers';


--
-- Name: dict_xsyn; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS dict_xsyn WITH SCHEMA public;


--
-- Name: EXTENSION dict_xsyn; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION dict_xsyn IS 'text search dictionary template for extended synonym processing';


--
-- Name: earthdistance; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS earthdistance WITH SCHEMA public;


--
-- Name: EXTENSION earthdistance; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION earthdistance IS 'calculate great-circle distances on the surface of the Earth';


--
-- Name: fuzzystrmatch; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS fuzzystrmatch WITH SCHEMA public;


--
-- Name: EXTENSION fuzzystrmatch; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION fuzzystrmatch IS 'determine similarities and distance between strings';


--
-- Name: hstore; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS hstore WITH SCHEMA public;


--
-- Name: EXTENSION hstore; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION hstore IS 'data type for storing sets of (key, value) pairs';


--
-- Name: intarray; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS intarray WITH SCHEMA public;


--
-- Name: EXTENSION intarray; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION intarray IS 'functions, operators, and index support for 1-D arrays of integers';


--
-- Name: ltree; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS ltree WITH SCHEMA public;


--
-- Name: EXTENSION ltree; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION ltree IS 'data type for hierarchical tree-like structures';


--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA public;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track execution statistics of all SQL statements executed';


--
-- Name: pg_trgm; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_trgm WITH SCHEMA public;


--
-- Name: EXTENSION pg_trgm; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_trgm IS 'text similarity measurement and index searching based on trigrams';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: pgrowlocks; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgrowlocks WITH SCHEMA public;


--
-- Name: EXTENSION pgrowlocks; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgrowlocks IS 'show row-level locking information';


--
-- Name: pgstattuple; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgstattuple WITH SCHEMA public;


--
-- Name: EXTENSION pgstattuple; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgstattuple IS 'show tuple-level statistics';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry, geography, and raster spatial types and functions';


--
-- Name: tablefunc; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS tablefunc WITH SCHEMA public;


--
-- Name: EXTENSION tablefunc; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION tablefunc IS 'functions that manipulate whole tables, including crosstab';


--
-- Name: unaccent; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS unaccent WITH SCHEMA public;


--
-- Name: EXTENSION unaccent; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION unaccent IS 'text search dictionary that removes accents';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: xml2; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS xml2 WITH SCHEMA public;


--
-- Name: EXTENSION xml2; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION xml2 IS 'XPath querying and XSLT';


SET default_tablespace = '';

--
-- Name: users; Type: TABLE; Schema: public; Owner: linildug
--

CREATE TABLE public.users (
    email character varying(64) NOT NULL,
    fname character varying(64) NOT NULL,
    lname character varying(64) NOT NULL,
    password character varying(32) NOT NULL,
    "timestamp" timestamp with time zone
);


ALTER TABLE public.users OWNER TO linildug;

--
-- Name: udf_getrowsbypagenumberandsize(integer, integer); Type: FUNCTION; Schema: public; Owner: linildug
--

CREATE FUNCTION public.udf_getrowsbypagenumberandsize(pagenumber integer DEFAULT NULL::integer, pagesize integer DEFAULT NULL::integer) RETURNS SETOF public.users
    LANGUAGE plpgsql
    AS $$
 BEGIN
  RETURN QUERY
   SELECT *
   FROM users
   ORDER BY timestamp DESC
   LIMIT PageSize
   OFFSET ((PageNumber-1) * PageSize);
END;
$$;


ALTER FUNCTION public.udf_getrowsbypagenumberandsize(pagenumber integer, pagesize integer) OWNER TO linildug;

--
-- Name: admin; Type: TABLE; Schema: public; Owner: linildug
--

CREATE TABLE public.admin (
    email character varying(64) NOT NULL,
    fname character varying(64) NOT NULL,
    lname character varying(64) NOT NULL,
    password character varying(32) NOT NULL
);


ALTER TABLE public.admin OWNER TO linildug;

--
-- Name: lists; Type: TABLE; Schema: public; Owner: linildug
--

CREATE TABLE public.lists (
    list_id integer NOT NULL,
    email character varying(64) NOT NULL,
    list_name character varying(32) NOT NULL,
    tasks character varying(255) NOT NULL,
    "timestamp" timestamp with time zone
);


ALTER TABLE public.lists OWNER TO linildug;

--
-- Name: lists_list_id_seq; Type: SEQUENCE; Schema: public; Owner: linildug
--

ALTER TABLE public.lists ALTER COLUMN list_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.lists_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: admin; Type: TABLE DATA; Schema: public; Owner: linildug
--

COPY public.admin (email, fname, lname, password) FROM stdin;
adminemail@gmail.com	Ad	Min	imstumped
\.


--
-- Data for Name: lists; Type: TABLE DATA; Schema: public; Owner: linildug
--

COPY public.lists (list_id, email, list_name, tasks, "timestamp") FROM stdin;
3	jjones@ymail.com	Winning	{"{\\"task\\": [\\"Go to tha sto\\", \\"Get some dough\\"]}"}	2021-07-25 03:20:31.372864+00
4	jjones@ymail.com	Grocery List	{"{\\"task\\": [\\"Bread\\", \\"Juice\\", \\"Celery\\", \\"Soda\\"]}"}	2021-07-25 03:21:17.876337+00
5	jemima@email.com	Syrup 	{"{\\"task\\": [\\"Tap tree\\", \\"Place bucket underneath\\", \\"Let sap run\\", \\"Add sugar\\"]}"}	2021-07-25 03:27:10.862869+00
7	breeder@centurylink.net	New list	{"{\\"task\\": [\\"Peel peaches\\", \\"Eat them\\"]}"}	2021-07-25 18:49:30.355341+00
8	dnrenda@centurytel.net	Legion newsletter 	{"{\\"task\\": [\\"Do levee financials\\", \\"Make list for Dave's tasks\\"]}"}	2021-07-25 21:07:31.356699+00
9	dnrenda@centurytel.net	Business items	{"{\\"task\\": [\\"Pay bills\\", \\"Do Dave's bills\\", \\"Schedule Diamond \\"]}"}	2021-07-25 21:09:13.04488+00
10	breeder@centurylink.net	List two	{"task": ["Do things", "Do stuff", "Do more"]}	2021-07-25 23:26:57.187986+00
11	rage@gmail.com	Happy Dance	{"{\\"task\\": [\\"Fi fie fo fum\\"]}"}	2021-08-01 00:19:15.366559+00
13	rage@gmail.com	Happy Danc	{"{\\"task\\": [\\"Do it again\\"]}"}	2021-08-01 00:19:48.621084+00
\.


--
-- Data for Name: spatial_ref_sys; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.spatial_ref_sys (srid, auth_name, auth_srid, srtext, proj4text) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: linildug
--

COPY public.users (email, fname, lname, password, "timestamp") FROM stdin;
wchun@email.com	Wing	Chun	yo	2021-06-15 06:47:50.400013+00
wbrady@email.com	Wayne	Brady	yo	2021-06-15 06:47:59.559117+00
bdeniro@email.com	Bobby	Deniro	yo	2021-06-15 06:48:12.245631+00
rredford@email.com	Robert	Redford	yo	2021-06-15 06:48:24.483297+00
rdowney@gmail.com	Robert	Downey	yo	2021-06-15 06:48:34.491836+00
cmunga@gmail.com	Cuca	Munga	yo	2021-06-15 06:48:47.533874+00
rage@gmail.com	Rage	Against	yo	2021-06-15 06:48:58.585789+00
annoying@email.com	A	Noying	yo	2021-06-15 06:49:16.428139+00
rdick@email.com	Ranger	Dick	yo	2021-06-15 06:49:26.370657+00
jjones@ymail.com	Jim	Jones	yo	2021-07-25 03:20:01.535306+00
jemima@email.com	Je	Mima	yo	2021-07-25 03:26:14.207631+00
davidreeder@centurytel.net	David	Reeder	yo	2021-07-25 18:36:02.405933+00
breeder@centurylink.net	Brenda	Reeder	yo	2021-07-25 18:48:19.983764+00
dnrenda@centurytel.net	Brenda	Reeder	2730	2021-07-25 21:04:39.270801+00
\.


--
-- Name: lists_list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: linildug
--

SELECT pg_catalog.setval('public.lists_list_id_seq', 13, true);


--
-- Name: admin admin_pkey; Type: CONSTRAINT; Schema: public; Owner: linildug
--

ALTER TABLE ONLY public.admin
    ADD CONSTRAINT admin_pkey PRIMARY KEY (email);


--
-- Name: lists lists_list_name_key; Type: CONSTRAINT; Schema: public; Owner: linildug
--

ALTER TABLE ONLY public.lists
    ADD CONSTRAINT lists_list_name_key UNIQUE (list_name);


--
-- Name: lists lists_pkey; Type: CONSTRAINT; Schema: public; Owner: linildug
--

ALTER TABLE ONLY public.lists
    ADD CONSTRAINT lists_pkey PRIMARY KEY (list_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: linildug
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (email);


--
-- Name: lists fk_owner; Type: FK CONSTRAINT; Schema: public; Owner: linildug
--

ALTER TABLE ONLY public.lists
    ADD CONSTRAINT fk_owner FOREIGN KEY (email) REFERENCES public.users(email) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

